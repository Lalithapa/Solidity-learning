// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;
// library addition{
//     function add(uint a, uint b ) public pure returns(uint) {
//         return a+b;
//     }
//     function mul(uint a, uint b ) public pure returns(uint) {
//         return a*b;
//     }
//     function sub(uint a, uint b ) public pure returns(uint) {
//         return a-b;
//     }
//     function div(uint a, uint b ) public pure returns(uint) {
//         return a/b;
//     }
// }

contract newTransfer{
    uint public num =2;
    event TransferToken(address _sender, address _receiver, uint _amtTransaction);
         function add() public{
       num =10;
    }
    function mul() public{
        num =30;
    }


fallback() external {
    num=1;
}

     function sends(address _receiver) public  payable {
         require(_receiver != msg.sender, "You cannot send to yourself");
         payable(_receiver).transfer(msg.value);
        emit TransferToken(msg.sender, _receiver , msg.value);
     }
}
